openapi: "3.0.3"

info:
  title: Spr책kbanken Metadata
  description: API for serving metadata for corpora and lexicons
  version: "2.0"
  contact:
    name: Spr책kbanken
    url: https://spraakbanken.gu.se/
    email: sb-info@svenska.gu.se
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://ws.spraakbanken.gu.se/ws/metadata
    description: Production server

tags:
  - name: General
    description: |
      This API provides a quick way to retrieve a list of resources (corpora, lexicons, models, analyses, and utilities)
      available at Spr책kbanken. It is used to display resources on Spr책kbanken's website.

      Most endpoints return lists of resources. Each resource is represented as a JSON object that adheres to the JSON
      schema available at https://ws.spraakbanken.gu.se/ws/metadata/schema.

      Some resources have detailed descriptions that are only displayed when using the `resource` parameter. For more
      information about descriptions, please refer to the [GitHub
      repository](https://github.com/spraakbanken/sb-metadata).

paths:
  /:
    get:
      summary: List resources
      description: Show metadata for all corpora, lexicons and models.
      tags:
        - General
      parameters:
        - name: resource
          in: query
          description: ID of the resource to display
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  corpora:
                    type: array
                    description: List of all corpora
                    items:
                      type: object
                  lexicons:
                    type: array
                    description: List of all lexicons
                    items:
                      type: object
                  models:
                    type: array
                    description: List of all models
                    items:
                      type: object
  /corpora:
    get:
      summary: List corpus resources
      description: Show metadata for all corpora.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource_type:
                    type: string
                    description: Name of the resource type
                  hits:
                    type: int
                    description: Amount of resources in 'resources' array
                  resources:
                    type: array
                    description: Array of corpus objects
                    items:
                      type: object
  /lexicons:
    get:
      summary: List lexicon resources
      description: Show metadata for all lexicons.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource_type:
                    type: string
                    description: Name of the resource type
                  hits:
                    type: int
                    description: Amount of resources in 'resources' array
                  resources:
                    type: array
                    description: Array of lexicon objects
                    items:
                      type: object
  /models:
    get:
      summary: List model resources
      description: Show metadata for all models.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource_type:
                    type: string
                    description: Name of the resource type
                  hits:
                    type: int
                    description: Amount of resources in 'resources' array
                  resources:
                    type: array
                    description: Array of model objects
                    items:
                      type: object
  /collections:
    get:
      summary: List collection resources
      description: Show metadata for all collections.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: int
                    description: Amount of resources in 'resources' array
                  resources:
                    type: array
                    description: Array of collection objects
                    items:
                      type: object
  /schema:
    get:
      summary: Return JSON schema for resource metadata
      description: Show metadata schema for resources.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Metadata schema for resources
  /list-ids:
    get:
      summary: List resource IDs
      description: List all existing resource IDs.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: Array of resource IDs
  /check-id-availability:
    get:
      summary: Check availability of a resource ID
      description: Check whether a given resource ID is in use or not.
      tags:
        - General
      parameters:
        - name: id
          in: query
          description: Resource ID to check
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: str
                    description: The input ID
                    example: my-corpus
                  available:
                    type: boolean
                    description: States whether the ID is available
  /renew-cache:
    get:
      summary: Renew cache
      description: Flush the cache and re-read all json files.
      tags:
        - General
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cache_renewed:
                    type: boolean
                    description: States whether the cache renewal was successful
                  error:
                    type: string
                    description: The Python error message
                    default: null
  /bibtex:
    get:
      summary: Return bibtex citation as text
      description: Create a bibtex record for the resouce passed as parameter.
      tags:
        - General
      parameters:
        - name: resource
          in: query
          description: ID of the resource to create bibtex for
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bibtex:
                    type: string
                    description: BibTeX citation string
                  error:
                    type: string
                    description: Error message if argument is incorrect or program error.
                    default: ""
